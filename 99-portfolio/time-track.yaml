openapi: 3.0.3
info:
  title: DHBW Timetrack
  description: This is the API provided by the Timetrack app developed at DHBW.
  version: 1.0.0
servers:
  - url: 'https'
paths:
  /projects:
    get:
      summary: Returns a list of all projects.
      responses:
        200:
          description: List of projects retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
        500:
          description: Internal server error. The response payload is empty.
    post:
      summary: Create a new project.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProject'
      responses:
        201:
          description: Project created successfully. The response payload is empty.
          headers:
            Location:
              description: URL of the created project.
              schema:
                type: string
        400:
          description: Invalid request data. Occurs, if a required attribute in the request payload is missing. The response payload is empty.
        500:
          description: Internal server error. The response payload is empty.

  /projects/{project_id}:
    get:
      summary: Retrieve an existing project.
      parameters:
        - in: path
          required: true
          name: project_id
          description: ID of the project to update
          schema:
            type: string
      responses:
        200:
          description: Existing project retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExistingProject'
        404:
          description: Project not found. Occurs, if no project with the given project ID exists. The response payload is empty.
        500:
          description: Internal server error. The response payload is empty.

    put:
      summary: Update an existing project.
      parameters:
        - in: path
          required: true
          name: project_id
          description: ID of the project to update
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExistingProject'
      responses:
        204:
          description: Existing project updated successfully.
        400:
          description: Invalid request data. Occurs, if the project ID in the URL differs from the project ID in the request payload. Also occurs, if a required attrivute of the request payload is missing.
        404:
          description: Project not found. Occurs, if no project with the given project ID exists. The response payload is empty.
        500:
          description: Internal server error. The response payload is empty.

    delete:
      summary: Delete an existing project.
      parameters:
        - in: path
          required: true
          name: project_id
          description: ID of the project to delete
          schema:
            type: string
      responses:
        204:
          description: Project deleted successfully. The response payload is empty.
        404:
          description: Project not found. Occurs, if no project with the given project ID exists. The response payload is empty.
        500:
          description: Internal server error. The response payload is empty.

components:
  schemas:
    ProjectList:
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ExistingProject'
    NewProject:
      required:
        - title
        - notes
        - loggedSeconds
      properties:
        title:
          type: string
          example: 'My Project Title'
        notes:
          type: string
          example: 'This describes my project'
        loggedSeconds:
          type: integer
          example: 12345
    ExistingProject:
      allOf:
        - $ref: '#/components/schemas/NewProject'
        - type: object
          required:
            - id
          properties:
            id:
              type: string
              example: 'my-project-id'
